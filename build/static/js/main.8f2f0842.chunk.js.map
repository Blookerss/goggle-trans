{"version":3,"sources":["components/App.jsx","components/Main.jsx","components/Typography.jsx","components/Grid.jsx","components/WindowButtons.jsx","components/Header.jsx","components/Button.jsx","components/SpanEditable.jsx","components/Translation.jsx","pages/index.jsx","serviceWorker.js","index.jsx"],"names":["AppComponent","styled","div","App","this","props","children","React","Component","MainComponent","main","Main","TextComponent","p","color","margin","size","weight","lineHeight","Typography","text","GridComponent","spacing","flow","wrap","none","reverse","alignItems","alignContent","direction","horizontal","horizontalReverse","vertical","verticalReverse","justifyContent","Grid","Tauri","window","__TAURI__","WindowButtonsComponent","WindowButtonComponent","button","WindowButtons","getCurrent","close","a","isMaximized","unmaximize","maximize","minimize","onClick","closeWindow","bind","class","maximizeWindow","minimizeWindow","HeaderComponent","header","BrandComponent","IconComponent","img","Header","src","icon","alt","width","height","Themes","primary","hover","normal","active","disabled","border","textColor","secondary","tertiary","ButtonComponent","theme","i","className","Button","SpanEditable","ref","createRef","onBlur","emitChange","onInput","contentEditable","dangerouslySetInnerHTML","__html","html","nextProps","current","innerHTML","console","log","onChange","lastHtml","target","value","TopComponent","BottomComponent","InputComponent","InputHeaderAnim","keyframes","InputHeaderComponent","InputTextAreaAnim","InputTextAreaComponent","InputResultComponent","TranslateAmount","input","Translation","state","result","enabled","embedding","inputValue","translating","translations","automaticResult","toast","promise","ky","get","pending","success","error","position","POSITION","BOTTOM_RIGHT","setState","forceUpdate","evt","parseInt","post","json","language","translateTimes","outputLanguage","timeout","output","id","embedLink","clipboard","writeText","navigator","translate","length","embed","type","onTransChange","max","min","placeholder","onInputChange","role","IndexPage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8f2f0842.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AppComponent = styled.div`\r\n    \r\n`;\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <AppComponent>\r\n                {this.props.children}\r\n            </AppComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainComponent = styled.main`\r\n    display: flex;\r\n    padding: 32px 40px 0 40px;\r\n    flex-grow: 1;\r\n    margin-top: 64px;\r\n    align-items: center;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    background-color: #1D1D1D;\r\n`;\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <MainComponent>\r\n                {this.props.children}\r\n            </MainComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TextComponent = styled.p`\r\n    color: ${props => props.color || \"white\"};\r\n    margin: ${props => props.margin || 0};\r\n    font-size: ${props => props.size || \"1rem\"};\r\n    font-weight: ${props => props.weight || 500};\r\n    line-height: ${props => props.lineHeight || 1.43};\r\n`;\r\n\r\nclass Typography extends React.Component {\r\n    render() {\r\n        return (\r\n            <TextComponent {...this.props}>\r\n                {this.props.text}\r\n            </TextComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Typography;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GridComponent = styled.div`\r\n    gap: ${props => props.spacing || 0};\r\n    margin: ${props => props.margin || 0};\r\n    display: flex;\r\n    flex-flow: ${props => props.flow || \"row nowrap\"};\r\n    flex-wrap: ${props => props.wrap ? {none: \"nowrap\", wrap: \"wrap\", reverse: \"wrap-reverse\"}[props.wrap] : \"nowrap\"};\r\n    align-items: ${props => props.alignItems || \"stretch\"};\r\n    align-content: ${props => props.alignContent || \"normal\"};\r\n    flex-direction: ${props => props.direction ? {horizontal: \"row\", horizontalReverse: \"row-reverse\", vertical: \"column\", verticalReverse: \"column\"}[props.direction] || \"row\" : \"row\"};\r\n    justify-content: ${props => props.justifyContent || \"flex-start\"};\r\n`;\r\n\r\nclass Grid extends React.Component {\r\n    render() {\r\n        return (\r\n            <GridComponent {...this.props}>\r\n                {this.props.children}\r\n            </GridComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Grid from './Grid';\r\n\r\nconst Tauri = window.__TAURI__;\r\n\r\nconst WindowButtonsComponent = styled(Grid)`\r\n    height: 100%;\r\n`;\r\n\r\nconst WindowButtonComponent = styled.button`\r\n    color: #cccbcb;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    font-size: 1rem;\r\n    background: none;\r\n    transition: color 0.2s;\r\n\r\n    &:hover {\r\n        color: ${props => props.color};\r\n    }\r\n`;\r\n\r\nclass WindowButtons extends React.Component {\r\n    closeWindow() {\r\n        Tauri.window.getCurrent().close();\r\n    }\r\n\r\n    async maximizeWindow() {\r\n        const window = Tauri.window.getCurrent();\r\n        if (await window.isMaximized())\r\n            window.unmaximize();\r\n        else\r\n            window.maximize();\r\n    }\r\n\r\n    minimizeWindow() {\r\n        Tauri.window.getCurrent().minimize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WindowButtonsComponent spacing=\"16px\" direction=\"horizontalReverse\" alignItems=\"center\">\r\n                <WindowButtonComponent color=\"#ff7070\" onClick={this.closeWindow.bind(this)}>\r\n                    <i class=\"bi bi-x-lg\" />\r\n                </WindowButtonComponent>\r\n                <WindowButtonComponent color=\"#ffffff\" onClick={this.maximizeWindow.bind(this)}>\r\n                    <i class=\"bi bi-fullscreen\" />\r\n                </WindowButtonComponent>\r\n                <WindowButtonComponent color=\"#ffffff\" onClick={this.minimizeWindow.bind(this)}>\r\n                    <i class=\"bi bi-fullscreen-exit\" />\r\n                </WindowButtonComponent>\r\n            </WindowButtonsComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WindowButtons;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Typography from './Typography';\r\nimport WindowButtons from './WindowButtons';\r\n\r\nconst HeaderComponent = styled.header`\r\n    top: 0;\r\n    width: 100%;\r\n    height: 64px;\r\n    z-index: 1100;\r\n    padding: 0 24px;\r\n    position: fixed;\r\n    background-color: #121212;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst BrandComponent = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst IconComponent = styled.img`\r\n    vertical-align: middle;\r\n`;\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <HeaderComponent data-tauri-drag-region>\r\n                <BrandComponent>\r\n                    <IconComponent\r\n                        src={this.props.icon}\r\n                        alt=\"Brand Logo\"\r\n                        width={36}\r\n                        height={36}\r\n                    />\r\n                    <Typography\r\n                        size=\"1.2rem\"\r\n                        weight={500}\r\n                        margin=\"0 0 0 16px\"\r\n                        lineHeight={2}\r\n                        text={this.props.text}\r\n                    />\r\n                </BrandComponent>\r\n                <WindowButtons/>\r\n            </HeaderComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Themes = {\r\n    primary: {\r\n        color: {\r\n            hover: \"#26FF9C\",\r\n            normal: \"#00E87E\",\r\n            active: \"#00B864\",\r\n            disabled: \"#004f2b\"\r\n        },\r\n        border: {\r\n            hover: \"none\",\r\n            normal: \"none\",\r\n            active: \"none\",\r\n            disabled: \"none\"\r\n        },\r\n        textColor: {\r\n            hover: \"#121212\",\r\n            normal: \"#121212\",\r\n            active: \"#121212\",\r\n            disabled: \"#121212\"\r\n        }\r\n    },\r\n    secondary: {\r\n        color: {\r\n            hover: \"#E1E1E1\",\r\n            normal: \"#FFFFFF\",\r\n            active: \"#CBCBCB\",\r\n            disabled: \"#565656\"\r\n        },\r\n        border: {\r\n            hover: \"none\",\r\n            normal: \"none\",\r\n            active: \"none\",\r\n            disabled: \"none\"\r\n        },\r\n        textColor: {\r\n            hover: \"#121212\",\r\n            normal: \"#121212\",\r\n            active: \"#121212\",\r\n            disabled: \"#121212\"\r\n        }\r\n    },\r\n    tertiary: {\r\n        color: {\r\n            hover: \"transparent\",\r\n            normal: \"transparent\",\r\n            active: \"transparent\",\r\n            disabled: \"transparent\"\r\n        },\r\n        border: {\r\n            hover: \"1px solid #E1E1E1\",\r\n            normal: \"1px solid #FFFFFF\",\r\n            active: \"1px solid #CBCBCB\",\r\n            disabled: \"1px solid #565656\"\r\n        },\r\n        textColor: {\r\n            hover: \"#E1E1E1\",\r\n            normal: \"#FFFFFF\",\r\n            active: \"#CBCBCB\",\r\n            disabled: \"#565656\"\r\n        }\r\n    },\r\n};\r\nconst ButtonComponent = styled.button`\r\n    color: ${props => Themes[props.theme].textColor.normal};\r\n    margin: 0;\r\n    height: 48px;\r\n    border: ${props => Themes[props.theme].border.normal};\r\n    cursor: pointer;\r\n    outline: 0;\r\n    display: inline-flex;\r\n    position: relative;\r\n    font-size: 1rem;\r\n    min-width: 160px;\r\n    box-shadow: none;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    padding-top: 0;\r\n    font-family: HCo Gotham SSm, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.43;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n    padding-bottom: 0;\r\n    text-transform: none;\r\n    vertical-align: middle;\r\n    text-decoration: none;\r\n    justify-content: center;\r\n    background-color: ${props => Themes[props.theme].color.normal};\r\n    -webkit-appearance: none;\r\n\r\n    &:active {\r\n        color: ${props => Themes[props.theme].textColor.active};\r\n        border: ${props => Themes[props.theme].border.active};\r\n        background-color: ${props => Themes[props.theme].color.active};\r\n    }\r\n    &:hover {\r\n        color: ${props => Themes[props.theme].textColor.hover};\r\n        border: ${props => Themes[props.theme].border.hover};\r\n        background-color: ${props => Themes[props.theme].color.hover};\r\n    }\r\n    &:disabled {\r\n        color: ${props => Themes[props.theme].textColor.disabled};\r\n        cursor: not-allowed;\r\n        border: ${props => Themes[props.theme].border.disabled};\r\n        background-color: ${props => Themes[props.theme].color.disabled};\r\n    }\r\n`;\r\n\r\nconst IconComponent = styled.i`\r\n    color: ${props => Themes[props.theme].textColor};\r\n    display: ${props => props.className ? 'block' : 'none'};\r\n    margin-right: 8px;\r\n`;\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        return (\r\n            <ButtonComponent {...this.props} theme={this.props.theme || \"primary\"}>\r\n                <IconComponent className={this.props.icon} theme={this.props.theme || \"primary\"}/>\r\n                {this.props.text || \"Button\"}\r\n            </ButtonComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nclass SpanEditable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div\r\n                ref={this.ref}\r\n                onBlur={this.emitChange.bind(this)}\r\n                onInput={this.emitChange.bind(this)}\r\n                contentEditable\r\n                dangerouslySetInnerHTML={{ __html: this.props.html }}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.html !== this.ref.current.innerHTML;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.html !== this.ref.current.innerHTML) {\r\n            this.ref.current.innerHTML = this.props.html;\r\n        }\r\n    }\r\n\r\n    emitChange() {\r\n        let html = this.ref.current.innerHTML;\r\n        console.log(html);\r\n        if (this.props.onChange && html !== this.lastHtml) {\r\n            this.props.onChange({\r\n                target: {\r\n                    value: html\r\n                }\r\n            });\r\n        }\r\n        this.lastHtml = html;\r\n    }\r\n}\r\n\r\nexport default SpanEditable;","import ky from 'ky';\r\nimport React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport Grid from './Grid';\r\nimport Button from './Button';\r\nimport Typography from './Typography';\r\nimport SpanEditable from './SpanEditable';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Tauri = window.__TAURI__;\r\n\r\nconst MainComponent = styled(Grid)`\r\n    width: 95%;\r\n    height: 80%;\r\n    display: flex;\r\n    border-radius: 0 0 8px 8px;\r\n    background-color: #222222;\r\n`;\r\n\r\nconst TopComponent = styled(Grid)`\r\n    width: 100%;\r\n    padding: 8px;\r\n    border-radius: 8px 8px 0 0;\r\n    background-color: #2c2c2c;\r\n`;\r\n\r\nconst BottomComponent = styled(Grid)`\r\n    width: 100%;\r\n    padding: 8px 8px 24px 8px;\r\n`;\r\n\r\nconst InputComponent = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst InputHeaderAnim = keyframes`\r\n    0% {\r\n        color: #ffffffcc;\r\n    }\r\n    50% {\r\n        color: #ffffff99;\r\n    }\r\n    100% {\r\n        color: #ffffffcc;\r\n    }\r\n`;\r\n\r\nconst InputHeaderComponent = styled.p`\r\n    color: #ffffffcc;\r\n    margin: 12px 0 0 12px;\r\n\r\n    &:disabled {\r\n        animation: ${InputHeaderAnim} 2s linear infinite;\r\n    }\r\n`;\r\n\r\nconst InputTextAreaAnim = keyframes`\r\n    0% {\r\n        opacity: 1;\r\n    }\r\n    50% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst InputTextAreaComponent = styled(SpanEditable)`\r\n    width: 100%;\r\n    color: #ffffff;\r\n    cursor: text;\r\n    margin: 4px 0 0 12px;\r\n    outline: none;\r\n    font-size: 1rem;\r\n    background: none;\r\n    font-weight: 500;\r\n    font-family: HCo Gotham SSm, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;\r\n\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    &:empty:before {\r\n        color: #ffffff4d;\r\n        content: attr(placeholder);\r\n    }\r\n\r\n    &:empty:focus:before {\r\n        content: \"\";\r\n        animation: ${InputTextAreaAnim} 1s steps(1, end) infinite;\r\n        border-left: 1px solid white;\r\n    }\r\n`;\r\n\r\nconst InputResultComponent = styled.p`\r\n    width: 100%;\r\n    color: #ffffff;\r\n    margin: 4px 0 0 12px;\r\n    font-size: 1rem;\r\n    background: none;\r\n    font-weight: 500;\r\n\r\n    &.nores {\r\n        color: #ffffff4d;\r\n    }\r\n`;\r\n\r\nconst TranslateAmount = styled.input`\r\n\r\n`;\r\n\r\nclass Translation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            result: '',\r\n            enabled: false,\r\n            embedding: false,\r\n            inputValue: '',\r\n            translating: false,\r\n            translations: 5,\r\n            automaticResult: true\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await toast.promise(\r\n            ky.get(\"https://goggletrans.blookers.repl.co/api\"),\r\n            {\r\n                pending: 'Checking goggle trans API',\r\n                success: 'Translation is now available',\r\n                error: 'Something went wrong!'\r\n            },\r\n            {\r\n                className: 'gotham',\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n                theme: 'dark'\r\n            }\r\n        );\r\n        this.setState({\r\n            enabled: true\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    onInputChange(evt) {\r\n        this.setState({\r\n            inputValue: evt.target.value\r\n        });\r\n    }\r\n\r\n    onTransChange(evt) {\r\n        this.setState({\r\n            translations: parseInt(evt.target.value)\r\n        });\r\n    }\r\n\r\n    async translate() {\r\n        if(!this.state.translating) {\r\n            this.setState({\r\n                translating: true,\r\n                result: '',\r\n                input: this.state.inputValue\r\n            });\r\n\r\n            let { result } = await toast.promise(\r\n                ky.post(\"https://goggletrans.blookers.repl.co/api/translate\", {\r\n                    json: {\r\n                        input: this.state.inputValue,\r\n                        language: 'en',\r\n                        translateTimes: this.state.translations,\r\n                        outputLanguage: this.state.automaticResult ? 'auto' : 'en'\r\n                    },\r\n                    timeout: false\r\n                }).json(),\r\n                {\r\n                    pending: 'Translating Your Input',\r\n                    success: 'Translation Succeeded!',\r\n                    error: 'Something went wrong!'\r\n                },\r\n                {\r\n                    className: 'gotham',\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    theme: 'dark'\r\n                }\r\n            );\r\n\r\n            this.setState({\r\n                translating: false,\r\n                result\r\n            });\r\n        }\r\n    }\r\n\r\n    async embed() {\r\n        this.setState({\r\n            embedding: true\r\n        });\r\n\r\n        let { id } = await toast.promise(\r\n            ky.post(\"https://goggletrans.blookers.repl.co/api/embed\", {\r\n                json: {\r\n                    input: this.state.input,\r\n                    output: this.state.result\r\n                },\r\n                timeout: false\r\n            }).json(),\r\n            {\r\n                pending: 'Embedding Translation',\r\n                success: 'Embed Link copied to clipboard!',\r\n                error: 'Something went wrong!'\r\n            },\r\n            {\r\n                className: 'gotham',\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n                theme: 'dark'\r\n            }\r\n        );\r\n\r\n        let embedLink = `https://goggletrans.blookers.repl.co/embed/${id}`;\r\n        if (Tauri)\r\n            await Tauri.clipboard.writeText(embedLink);\r\n        else\r\n            navigator.clipboard.writeText(embedLink);\r\n\r\n        this.setState({\r\n            embedding: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        console.log(this.state.enabled && !this.state.translating);\r\n        return (\r\n            <MainComponent direction=\"vertical\">\r\n                <TopComponent spacing=\"16px\" alignItems=\"center\">\r\n                    <Button\r\n                        text=\"Translate\"\r\n                        icon=\"bi bi-translate\"\r\n                        onClick={this.translate.bind(this)}\r\n                        disabled={this.state.enabled && (this.state.inputValue.length === 0 || this.state.translating)}\r\n                    />\r\n                    <Button\r\n                        text=\"Embed\"\r\n                        icon=\"bi bi-cloud-upload-fill\"\r\n                        theme=\"tertiary\"\r\n                        onClick={this.embed.bind(this)}\r\n                        disabled={this.state.result.length === 0 || this.state.embedding}\r\n                    />\r\n                    <Grid direction=\"vertical\">\r\n                        <Grid spacing=\"16px\">\r\n                            <Typography text={`Process Amount (${this.state.translations})`}/>\r\n                            <TranslateAmount\r\n                                type=\"range\"\r\n                                onChange={this.onTransChange.bind(this)}\r\n                                value={this.state.translations}\r\n                                max=\"10\"\r\n                                min=\"1\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid spacing=\"16px\">\r\n                            <Typography text=\"Automatic Result:\"/>\r\n                            <Typography text=\"Enabled (Forced)\" color=\"#94ff87\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </TopComponent>\r\n                <BottomComponent direction=\"vertical\">\r\n                    <InputComponent>\r\n                        <InputHeaderComponent>\r\n                            Input\r\n                        </InputHeaderComponent>\r\n                        <InputTextAreaComponent\r\n                            contentEditable={!this.state.translating}\r\n                            placeholder=\"Type your translation input here!\"\r\n                            onChange={this.onInputChange.bind(this)}\r\n                            html={this.state.inputValue}\r\n                            role=\"textbox\"\r\n                        />\r\n                    </InputComponent>\r\n                    <InputComponent>\r\n                        <InputHeaderComponent disabled={this.state.translating}>\r\n                            Result\r\n                        </InputHeaderComponent>\r\n                        <InputResultComponent className={this.state.result.length === 0 ? \"nores\" : \"\"}>\r\n                            {this.state.result || \"The Translation Result will appear here.\"}\r\n                        </InputResultComponent>\r\n                    </InputComponent>\r\n                </BottomComponent>\r\n                <ToastContainer/>\r\n            </MainComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Translation;","import App from '../components/App';\r\nimport Main from '../components/Main';\r\nimport Header from '../components/Header';\r\nimport Translation from '../components/Translation';\r\n\r\nimport React from 'react';\r\n\r\nclass IndexPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <App>\r\n                <Header text=\"goggle trans\" icon={\"/favicon.ico\"} />\r\n                <Main>\r\n                    <Translation/>\r\n                </Main>\r\n            </App>\r\n        );\r\n    }\r\n};\r\n\r\nexport default IndexPage;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: { 'Service-Worker': 'script' }\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport IndexPage from './pages/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<IndexPage/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}